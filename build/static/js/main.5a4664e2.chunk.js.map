{"version":3,"sources":["actions/index.js","components/NewsCard.js","utils.js","pages/Home.js","components/NewsDetailDrawer.js","layout/Menu.js","layout/Header.js","components/ResponsiveDrawer.js","serviceWorker.js","reducers/index.js","index.js","App.js"],"names":["newsDrawerState","isShow","type","useStyles","makeStyles","card","maxWidth","connect","probs","classes","dispatch","useDispatch","Card","className","CardActionArea","onClick","obj","news","urlToImage","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","variant","color","description","fetchNews","category","url","axios","get","Home","useState","data","setData","loading","setLoading","useParams","useEffect","Utils","then","response","articles","catch","e","console","log","LinearProgress","Grid","container","direction","justify","alignItems","spacing","map","item","i","key","xs","sm","md","NewsDetailDrawer","useSelector","state","Drawer","anchor","open","CardHeader","style","padding","avatar","IconButton","size","aria-label","content","CardActions","Button","target","href","ListItemLink","props","primary","to","selected","link","React","forwardRef","ref","ListItem","button","ListItemText","Menu","selectedIndex","setSelectedIndex","handleListItemClick","event","index","List","Divider","Header","noWrap","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","flexGrow","closeMenuButton","marginLeft","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","CssBaseline","AppBar","position","Toolbar","edge","Hidden","smUp","implementation","onClose","paper","ModalProps","keepMounted","xsDown","Boolean","window","location","hostname","match","allReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","isNewsDrawer","rooterContent","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a4664e2.chunk.js","sourcesContent":["export const getNews = obj => ({\n  type: 'GET_NEWS',\n  obj\n})\n\nexport function newsDrawerState(isShow) {\n    return {\n      type: 'NEWS_DRAWER_STATE',\n      isShow: isShow\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux'\nimport { getNews, newsDrawerState } from '../actions'\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n});\n\nconst NewsCard = probs => {\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showNews = function () { \n    dispatch(getNews(probs.news))\n    dispatch(newsDrawerState(true))\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea onClick={showNews}>\n        {probs.news.urlToImage && (<CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image={probs.news.urlToImage}\n          title=\"Contemplative Reptile\"\n        />)}\n        <CardContent>\n          <Typography gutterBottom component=\"h4\">\n            {probs.news.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {probs.news.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default connect()(NewsCard)","import axios from 'axios'\n\nconst ApiKey = 'f60cd1ba47474d0e948e30a8273b2207';\n\nconst fetchNews = (category) => {\n    const url = 'https://newsapi.org/v2/top-headlines?country=tr&category=' + category + '&apiKey=' + ApiKey\n    return axios.get(url);\n};\n\nexport default {fetchNews};\n\n","import React, { useState, useEffect } from 'react';\nimport NewsCard from '../components/NewsCard'\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from \"react-router-dom\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Utils from '../utils'\n\nexport default function Home() {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    let { category } = useParams();\n    category = category || 'technology';\n\n    useEffect(() => {\n        setLoading(true);\n        Utils.fetchNews(category)\n            .then((response) => setData(response.data.articles))\n            .then(() => setLoading(false))\n            .catch((e) => { setLoading(false); console.log(\"error\", e) })\n    }, [category]);\n\n    return (\n        <div> {loading && (<LinearProgress />)}\n            <Grid container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"flex-start\" spacing={3}>\n\n                {data.map((item, i) => (\n                    <Grid key={i} item xs={12} sm={4} md={3} >\n                        <NewsCard news={item}></NewsCard>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react'\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { useSelector } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseRounded from '@material-ui/icons/CloseRounded';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 800,\n    },\n});\n\nexport default function NewsDetailDrawer() {\n\n    const newsDrawerState = useSelector(state => state.newsDrawerState)\n    const news = useSelector(state => state.news)\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            anchor=\"right\"\n            open={newsDrawerState}\n        >\n            <div>\n                <Card className={classes.card}>\n                    <CardHeader\n                        style={{ padding: \"3px\" }}\n                        avatar={\n                            <IconButton size=\"small\" color=\"default\" aria-label=\"Close\">\n                                <CloseRounded />\n                            </IconButton>\n                        }\n                    />\n                    {news.urlToImage && (<CardMedia\n                        component=\"img\"\n                        alt={news.title}\n                        image={news.urlToImage}\n                        title={news.title}\n                    />)}\n                    <CardContent>\n                        <Typography variant=\"h4\" gutterBottom>\n                            {news.title}\n                        </Typography>\n                        <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n                            {news.description}\n                        </Typography>\n                        <p></p>\n                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                            {news.content}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button color=\"primary\" target=\"_blank\" href={news.url} >More...</Button>\n                    </CardActions>\n                </Card>\n            </div>\n        </Drawer>\n    )\n}\n","import React, { useState } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from \"react-router-dom\";\n\nfunction ListItemLink(props) {\n  const { primary, to, selected } = props;\n  const link = React.forwardRef((props, ref) => <Link to={to} {...props} />);\n\n  return (\n    <ListItem selected={selected} button component={link}>\n      <ListItemText primary={primary} />\n    </ListItem>\n  );\n}\nexport default function Menu() {\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <div>\n      <List>\n        <div onClick={event => handleListItemClick(event, 0)}>\n          <ListItemLink selected={selectedIndex === 0} to=\"/technology\" primary=\"Technology\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 1)}>\n          <ListItemLink selected={selectedIndex === 1} to=\"/entertainment\" primary=\"Entertainment\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 2)}>\n          <ListItemLink selected={selectedIndex === 2} to=\"/general\" primary=\"General\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 3)}>\n          <ListItemLink selected={selectedIndex === 3} to=\"/health\" primary=\"Health\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 4)}>\n          <ListItemLink selected={selectedIndex === 4} to=\"/science\" primary=\"Science\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 5)}>\n          <ListItemLink selected={selectedIndex === 5} to=\"/sports\" primary=\"Sports\"></ListItemLink>\n        </div>\n        <Divider />\n        <div onClick={event => handleListItemClick(event, 6)}>\n          <ListItemLink selected={selectedIndex === 6} to=\"/business\" primary=\"Business\"></ListItemLink>\n        </div>\n        <Divider />\n      </List>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Header() {\n    return (\n        <Typography variant=\"h6\" noWrap>\n           React News\n        </Typography>\n    )\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Menu from '../layout/Menu';\nimport Header from '../layout/Header';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    closeMenuButton: {\n        marginRight: 'auto',\n        marginLeft: 0,\n    },\n}));\n\nfunction ResponsiveDrawer(props) {\n    \n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen)\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Header></Header>\n                </Toolbar>\n            </AppBar>\n\n            <nav className={classes.drawer}>\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, \n                        }}\n                    >\n                        <IconButton onClick={handleDrawerToggle} className={classes.closeMenuButton}>\n                            <CloseIcon />\n                        </IconButton>\n                        <Menu />\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        <div className={classes.toolbar} />\n                        <Menu />\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <div className={classes.content}>\n                <div className={classes.toolbar} />\n                <div>{props.content}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResponsiveDrawer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst news = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_NEWS':\n      return action.obj;\n    default:\n      return state\n  }\n}\n\nconst newsDrawerState = (state = false, action) => {\n  switch (action.type) {\n    case 'NEWS_DRAWER_STATE':\n      return action.isShow;\n    default:\n      return state\n  }\n}\n\nconst allReducer = combineReducers({ news, newsDrawerState });\n\nexport default allReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport allReducer from './reducers';\n\nconst store = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n    // other store enhancers if any\n  );\n\nReactDOM.render(<Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport { newsDrawerState } from './actions'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Home from './pages/Home';\nimport NewsDetailDrawer from './components/NewsDetailDrawer'\nimport ResponsiveDrawer from './components/ResponsiveDrawer'\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n\n  const isNewsDrawer = useSelector(state => state.newsDrawerState)\n\n  const closeNewsDrawer = () => {\n    if (isNewsDrawer === true)\n      dispatch(newsDrawerState(false))\n  };\n\n  const rooterContent = (\n    <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/:category\">\n            <Home />\n          </Route>\n    </Switch>\n  );\n  return (\n    <Router>\n      <div onClick={closeNewsDrawer} style={{display: 'flex'}}>\n        <ResponsiveDrawer content={rooterContent}></ResponsiveDrawer>\n        <NewsDetailDrawer/>  \n      </div>\n    </Router>\n  );\n}"],"sourceRoot":""}